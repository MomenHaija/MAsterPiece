@model Plant_Paradise.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/AdminLAyout.cshtml";
}
<style>
    .edit-product-form {
        background-color: #f7f7f7;
        border: 1px solid #ccc;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        max-width: 500px;
        margin: 0 auto;
    }

        .edit-product-form h2 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
            text-align: center;
        }

        .edit-product-form label {
            display: block;
            font-size: 16px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .edit-product-form input[type="text"],
        .edit-product-form textarea {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 3px;
            margin-bottom: 20px;
        }
</style>



<br /><br>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Product_id)
<div class="edit-product-form">
    <h2>Edit Product</h2>


    <p style="display:flex;justify-content:center;">
        <img src="~/Images/@Model.Product_Image" style="width:200px;height:200px;" />

    </p>

    @Html.LabelFor(model => model.Product_Name, htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.EditorFor(model => model.Product_Name, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Product_Name, "", new { @class = "text-danger" })


    @Html.LabelFor(model => model.Product_Image, htmlAttributes: new { @class = "control-label col-md-2" })
    <input type="file" name="Product_Image" class="form-control" />
    @Html.ValidationMessageFor(model => model.Product_Image, "", new { @class = "text-danger" })

    @Html.LabelFor(model => model.Product_Size, htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.EditorFor(model => model.Product_Size, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Product_Size, "", new { @class = "text-danger" })


    @Html.LabelFor(model => model.Product_Color, htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.EditorFor(model => model.Product_Color, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Product_Color, "", new { @class = "text-danger" })


    @Html.LabelFor(model => model.Product_Price, htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.EditorFor(model => model.Product_Price, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Product_Price, "", new { @class = "text-danger" })

    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })


    <br />





    @Html.LabelFor(model => model.Product_Description, htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.EditorFor(model => model.Product_Description, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Product_Description, "", new { @class = "text-danger" })


    @Html.LabelFor(model => model.Sub_Categories.SubCategoryName, "Subcategory_id", htmlAttributes: new { @class = "control-label col-md-2" })
    @Html.DropDownList("Subcategory_id", null, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Sub_Categories.SubCategoryName, "", new { @class = "text-danger" })
    <br />
    <input type="submit" value="Save" class="btn btn-success" />
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

</div>
}
